log_whole_weight = log10(rawdata$Whole_weight),
log_shucked_weight = log10(rawdata$Shucked_weight),
log_viscera_weight = log10(rawdata$Viscera_weight),
log_shell_weight = log10(rawdata$Shell_weight),
log_rings = log10(rawdata$Rings)
)
data_scaled$Sex <- factor(data_scaled$sex, levels = c("M", "F", "I"))
data_scaled_live = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_rings = log10(rawdata$Rings)
)
#rawdata |>
# ggplot() +
#aes(x = Rings) +
#geom_histogram(binwidth = 1, colour='black',size=1, fill="grey")+
#labs(x = "Rings", y = "Count") +
#theme_bw()
install.packages("utils")
#webshot::install_phantomjs()
library("tidyverse")
# library("gt")
# library("janitor")
# library("grid")
library("gridExtra") #for grid.arrange
library("cowplot") #for get_legend
library("caret") #for train
library("ggfortify") #so autoplot can use lm
# library("GGally")
library("kableExtra") #for as_image
# library("magrittr")
library("corrplot")
# library("ggcorrplot")
library("utils")
rawdata = read.csv("data/abalone.data", header = FALSE)
names(rawdata) = c("Sex","Length","Diameter","Height","Whole_weight","Shucked_weight","Viscera_weight","Shell_weight","Rings")
rawdata = rawdata |> mutate(
Sex = Sex,
Length = Length * 200,
Diameter = Diameter * 200,
Height = Height * 200,
Whole_weight = Whole_weight * 200,
Shucked_weight = Shucked_weight * 200,
Viscera_weight = Viscera_weight * 200,
Shell_weight = Shell_weight * 200,
Rings = Rings
)
rawdata$Sex <- factor(rawdata$Sex, levels = c("M", "F", "I"))
data_scaled = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_shucked_weight = log10(rawdata$Shucked_weight),
log_viscera_weight = log10(rawdata$Viscera_weight),
log_shell_weight = log10(rawdata$Shell_weight),
log_rings = log10(rawdata$Rings)
)
data_scaled$Sex <- factor(data_scaled$sex, levels = c("M", "F", "I"))
data_scaled_live = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_rings = log10(rawdata$Rings)
)
#rawdata |>
# ggplot() +
#aes(x = Rings) +
#geom_histogram(binwidth = 1, colour='black',size=1, fill="grey")+
#labs(x = "Rings", y = "Count") +
#theme_bw()
set.seed(123)
cv_scaled = train(
log_rings ~ .,
data = data_scaled,
method = "lm",
trControl = trainControl(
method = "repeatedcv",
verboseIter = FALSE
)
)
round(cv_scaled$results[c("Rsquared", "RMSE", "MAE")], 3) |> knitr::kable()
install.packages("webshot2")
#webshot::install_phantomjs()
library("tidyverse")
# library("gt")
# library("janitor")
# library("grid")
library("gridExtra") #for grid.arrange
library("cowplot") #for get_legend
library("caret") #for train
library("ggfortify") #so autoplot can use lm
# library("GGally")
library("kableExtra") #for as_image
# library("magrittr")
library("corrplot")
# library("ggcorrplot")
library("utils")
```{r setup, include=FALSE}
#webshot::install_phantomjs()
library("tidyverse")
# library("gt")
# library("janitor")
# library("grid")
library("gridExtra") #for grid.arrange
library("cowplot") #for get_legend
library("caret") #for train
library("ggfortify") #so autoplot can use lm
# library("GGally")
library("kableExtra") #for as_image
# library("magrittr")
library("corrplot")
# library("ggcorrplot")
library("utils")
# Specify the path to Google Chrome for webshot2/chromote
options(chromote.chrome = "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome")
rawdata = read.csv("data/abalone.data", header = FALSE)
names(rawdata) = c("Sex","Length","Diameter","Height","Whole_weight","Shucked_weight","Viscera_weight","Shell_weight","Rings")
rawdata = rawdata |> mutate(
Sex = Sex,
Length = Length * 200,
Diameter = Diameter * 200,
Height = Height * 200,
Whole_weight = Whole_weight * 200,
Shucked_weight = Shucked_weight * 200,
Viscera_weight = Viscera_weight * 200,
Shell_weight = Shell_weight * 200,
Rings = Rings
)
rawdata$Sex <- factor(rawdata$Sex, levels = c("M", "F", "I"))
data_scaled = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_shucked_weight = log10(rawdata$Shucked_weight),
log_viscera_weight = log10(rawdata$Viscera_weight),
log_shell_weight = log10(rawdata$Shell_weight),
log_rings = log10(rawdata$Rings)
)
data_scaled$Sex <- factor(data_scaled$sex, levels = c("M", "F", "I"))
data_scaled_live = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_rings = log10(rawdata$Rings)
)
#rawdata |>
# ggplot() +
#aes(x = Rings) +
#geom_histogram(binwidth = 1, colour='black',size=1, fill="grey")+
#labs(x = "Rings", y = "Count") +
#theme_bw()
#webshot::install_phantomjs()
library("tidyverse")
# library("gt")
# library("janitor")
# library("grid")
library("gridExtra") #for grid.arrange
library("cowplot") #for get_legend
library("caret") #for train
library("ggfortify") #so autoplot can use lm
# library("GGally")
library("kableExtra") #for as_image
# library("magrittr")
library("corrplot")
# library("ggcorrplot")
library("utils")
install.packages('tinytex')
tinytex::install_tinytex()
# Specify the path to Google Chrome for webshot2/chromote
options(chromote.chrome = "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome")
rawdata = read.csv("data/abalone.data", header = FALSE)
names(rawdata) = c("Sex","Length","Diameter","Height","Whole_weight","Shucked_weight","Viscera_weight","Shell_weight","Rings")
rawdata = rawdata |> mutate(
Sex = Sex,
Length = Length * 200,
Diameter = Diameter * 200,
Height = Height * 200,
Whole_weight = Whole_weight * 200,
Shucked_weight = Shucked_weight * 200,
Viscera_weight = Viscera_weight * 200,
Shell_weight = Shell_weight * 200,
Rings = Rings
)
rawdata$Sex <- factor(rawdata$Sex, levels = c("M", "F", "I"))
data_scaled = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_shucked_weight = log10(rawdata$Shucked_weight),
log_viscera_weight = log10(rawdata$Viscera_weight),
log_shell_weight = log10(rawdata$Shell_weight),
log_rings = log10(rawdata$Rings)
)
data_scaled$Sex <- factor(data_scaled$sex, levels = c("M", "F", "I"))
data_scaled_live = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_rings = log10(rawdata$Rings)
)
#rawdata |>
# ggplot() +
#aes(x = Rings) +
#geom_histogram(binwidth = 1, colour='black',size=1, fill="grey")+
#labs(x = "Rings", y = "Count") +
#theme_bw()
#webshot::install_phantomjs()
library("tidyverse")
# library("gt")
# library("janitor")
# library("grid")
library("gridExtra") #for grid.arrange
library("cowplot") #for get_legend
library("caret") #for train
library("ggfortify") #so autoplot can use lm
# library("GGally")
library("kableExtra") #for as_image
# library("magrittr")
library("corrplot")
# library("ggcorrplot")
library("utils")
install.packages('tinytex')
tinytex::install_tinytex()
# Specify the path to Google Chrome for webshot2/chromote
options(chromote.chrome = "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome")
rawdata = read.csv("data/abalone.data", header = FALSE)
names(rawdata) = c("Sex","Length","Diameter","Height","Whole_weight","Shucked_weight","Viscera_weight","Shell_weight","Rings")
rawdata = rawdata |> mutate(
Sex = Sex,
Length = Length * 200,
Diameter = Diameter * 200,
Height = Height * 200,
Whole_weight = Whole_weight * 200,
Shucked_weight = Shucked_weight * 200,
Viscera_weight = Viscera_weight * 200,
Shell_weight = Shell_weight * 200,
Rings = Rings
)
rawdata$Sex <- factor(rawdata$Sex, levels = c("M", "F", "I"))
data_scaled = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_shucked_weight = log10(rawdata$Shucked_weight),
log_viscera_weight = log10(rawdata$Viscera_weight),
log_shell_weight = log10(rawdata$Shell_weight),
log_rings = log10(rawdata$Rings)
)
data_scaled$Sex <- factor(data_scaled$sex, levels = c("M", "F", "I"))
data_scaled_live = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_rings = log10(rawdata$Rings)
)
#rawdata |>
# ggplot() +
#aes(x = Rings) +
#geom_histogram(binwidth = 1, colour='black',size=1, fill="grey")+
#labs(x = "Rings", y = "Count") +
#theme_bw()
#webshot::install_phantomjs()
library("tidyverse")
# library("gt")
# library("janitor")
# library("grid")
library("gridExtra") #for grid.arrange
library("cowplot") #for get_legend
library("caret") #for train
library("ggfortify") #so autoplot can use lm
# library("GGally")
library("kableExtra") #for as_image
# library("magrittr")
library("corrplot")
# library("ggcorrplot")
library("utils")
library("tinytex")
# Specify the path to Google Chrome for webshot2/chromote
options(chromote.chrome = "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome")
rawdata = read.csv("data/abalone.data", header = FALSE)
names(rawdata) = c("Sex","Length","Diameter","Height","Whole_weight","Shucked_weight","Viscera_weight","Shell_weight","Rings")
rawdata = rawdata |> mutate(
Sex = Sex,
Length = Length * 200,
Diameter = Diameter * 200,
Height = Height * 200,
Whole_weight = Whole_weight * 200,
Shucked_weight = Shucked_weight * 200,
Viscera_weight = Viscera_weight * 200,
Shell_weight = Shell_weight * 200,
Rings = Rings
)
rawdata$Sex <- factor(rawdata$Sex, levels = c("M", "F", "I"))
data_scaled = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_shucked_weight = log10(rawdata$Shucked_weight),
log_viscera_weight = log10(rawdata$Viscera_weight),
log_shell_weight = log10(rawdata$Shell_weight),
log_rings = log10(rawdata$Rings)
)
data_scaled$Sex <- factor(data_scaled$sex, levels = c("M", "F", "I"))
data_scaled_live = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_rings = log10(rawdata$Rings)
)
#rawdata |>
# ggplot() +
#aes(x = Rings) +
#geom_histogram(binwidth = 1, colour='black',size=1, fill="grey")+
#labs(x = "Rings", y = "Count") +
#theme_bw()
tinytex::tlmgr_install(c("babel-english", "hyphen-english"))
library("tidyverse")
# library("gt")
# library("janitor")
# library("grid")
library("gridExtra") #for grid.arrange
library("cowplot") #for get_legend
library("caret") #for train
library("ggfortify") #so autoplot can use lm
# library("GGally")
library("kableExtra") #for as_image
# library("magrittr")
library("corrplot")
# library("ggcorrplot")
library("utils")
library("tinytex")
# Specify the path to Google Chrome for webshot2/chromote
options(chromote.chrome = "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome")
rawdata = read.csv("data/abalone.data", header = FALSE)
names(rawdata) = c("Sex","Length","Diameter","Height","Whole_weight","Shucked_weight","Viscera_weight","Shell_weight","Rings")
rawdata = rawdata |> mutate(
Sex = Sex,
Length = Length * 200,
Diameter = Diameter * 200,
Height = Height * 200,
Whole_weight = Whole_weight * 200,
Shucked_weight = Shucked_weight * 200,
Viscera_weight = Viscera_weight * 200,
Shell_weight = Shell_weight * 200,
Rings = Rings
)
rawdata$Sex <- factor(rawdata$Sex, levels = c("M", "F", "I"))
data_scaled = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_shucked_weight = log10(rawdata$Shucked_weight),
log_viscera_weight = log10(rawdata$Viscera_weight),
log_shell_weight = log10(rawdata$Shell_weight),
log_rings = log10(rawdata$Rings)
)
data_scaled$Sex <- factor(data_scaled$sex, levels = c("M", "F", "I"))
data_scaled_live = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_rings = log10(rawdata$Rings)
)
#rawdata |>
# ggplot() +
#aes(x = Rings) +
#geom_histogram(binwidth = 1, colour='black',size=1, fill="grey")+
#labs(x = "Rings", y = "Count") +
#theme_bw()
library("tidyverse")
# library("gt")
# library("janitor")
# library("grid")
library("gridExtra") #for grid.arrange
library("cowplot") #for get_legend
library("caret") #for train
library("ggfortify") #so autoplot can use lm
# library("GGally")
library("kableExtra") #for as_image
# library("magrittr")
library("corrplot")
# library("ggcorrplot")
library("utils")
library("tinytex")
tinytex::tlmgr_install(c("babel-english", "hyphen-english"))
# Specify the path to Google Chrome for webshot2/chromote
options(chromote.chrome = "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome")
rawdata = read.csv("data/abalone.data", header = FALSE)
names(rawdata) = c("Sex","Length","Diameter","Height","Whole_weight","Shucked_weight","Viscera_weight","Shell_weight","Rings")
rawdata = rawdata |> mutate(
Sex = Sex,
Length = Length * 200,
Diameter = Diameter * 200,
Height = Height * 200,
Whole_weight = Whole_weight * 200,
Shucked_weight = Shucked_weight * 200,
Viscera_weight = Viscera_weight * 200,
Shell_weight = Shell_weight * 200,
Rings = Rings
)
rawdata$Sex <- factor(rawdata$Sex, levels = c("M", "F", "I"))
data_scaled = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_shucked_weight = log10(rawdata$Shucked_weight),
log_viscera_weight = log10(rawdata$Viscera_weight),
log_shell_weight = log10(rawdata$Shell_weight),
log_rings = log10(rawdata$Rings)
)
data_scaled$Sex <- factor(data_scaled$sex, levels = c("M", "F", "I"))
data_scaled_live = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_rings = log10(rawdata$Rings)
)
#rawdata |>
# ggplot() +
#aes(x = Rings) +
#geom_histogram(binwidth = 1, colour='black',size=1, fill="grey")+
#labs(x = "Rings", y = "Count") +
#theme_bw()
library("tidyverse")
# library("gt")
# library("janitor")
# library("grid")
library("gridExtra") #for grid.arrange
library("cowplot") #for get_legend
library("caret") #for train
library("ggfortify") #so autoplot can use lm
# library("GGally")
library("kableExtra") #for as_image
# library("magrittr")
library("corrplot")
# library("ggcorrplot")
library("utils")
library("tinytex")
tinytex::tlmgr_install(c("babel-english", "hyphen-english"))
# Specify the path to Google Chrome for webshot2/chromote
options(chromote.chrome = "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome")
rawdata = read.csv("data/abalone.data", header = FALSE)
names(rawdata) = c("Sex","Length","Diameter","Height","Whole_weight","Shucked_weight","Viscera_weight","Shell_weight","Rings")
rawdata = rawdata |> mutate(
Sex = Sex,
Length = Length * 200,
Diameter = Diameter * 200,
Height = Height * 200,
Whole_weight = Whole_weight * 200,
Shucked_weight = Shucked_weight * 200,
Viscera_weight = Viscera_weight * 200,
Shell_weight = Shell_weight * 200,
Rings = Rings
)
rawdata$Sex <- factor(rawdata$Sex, levels = c("M", "F", "I"))
data_scaled = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_shucked_weight = log10(rawdata$Shucked_weight),
log_viscera_weight = log10(rawdata$Viscera_weight),
log_shell_weight = log10(rawdata$Shell_weight),
log_rings = log10(rawdata$Rings)
)
data_scaled$Sex <- factor(data_scaled$sex, levels = c("M", "F", "I"))
data_scaled_live = tibble(
sex = rawdata$Sex,
log_length = log10(rawdata$Length),
log_diameter = log10(rawdata$Diameter),
height = rawdata$Height,
log_whole_weight = log10(rawdata$Whole_weight),
log_rings = log10(rawdata$Rings)
)
#rawdata |>
# ggplot() +
#aes(x = Rings) +
#geom_histogram(binwidth = 1, colour='black',size=1, fill="grey")+
#labs(x = "Rings", y = "Count") +
#theme_bw()
